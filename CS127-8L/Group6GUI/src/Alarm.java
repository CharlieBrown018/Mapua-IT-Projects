/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javazoom.jl.player.Player;
/**
 *
 * @author Migo
 */
public class Alarm extends javax.swing.JFrame implements Runnable{
     String sound, title;
          FileInputStream fileInputStream;
          BufferedInputStream buffedInputStream;
          Player player;
          long all;
          String hours, hh, mm;
          String hourAlarm, minuteAlarm;
          
    /**
     * Creates new form Alarm
     */
    public Alarm() {
        initComponents();
        Thread t = new Thread (this);
        t.start();
        Calendar c = Calendar.getInstance();
        SimpleDateFormat s1 = new SimpleDateFormat();
        SimpleDateFormat s2 = new SimpleDateFormat();
        Date date = c.getTime();
        hh = s1.format(date);
        mm = s2.format(date);
        jc1.setSelectedItem(hh);
        jc2.setSelectedItem(mm);
        Listen.setEnabled(false);
        clock();
    }
     
      public void chooseSong()
      {
          JFileChooser jfc = new JFileChooser ();
          int soundINT = jfc.showOpenDialog(null);
          if(soundINT == JFileChooser.APPROVE_OPTION)
          {
              File alarmMusic = jfc.getSelectedFile();
              sound = alarmMusic.getAbsolutePath();
              title = jfc.getSelectedFile().getName();
              System.out.println(title);
          }
          else if (soundINT == JFileChooser.CANCEL_OPTION)
          {
              JOptionPane.showMessageDialog(null,"You did not choose an alarm");
          }
      }
      
      public void startClock ()
      {
          try{
              fileInputStream = new FileInputStream(sound);
              buffedInputStream = new BufferedInputStream(fileInputStream);
              player = new Player(buffedInputStream);
              all = fileInputStream.available();
              new Thread()
              {
                  public void run ()
                  {
                      try
                      {
                          player.play();
                          
                      }catch(Exception e)
                      {
                          
                      }                          
                  }
              }.start();
          }catch(Exception e)
          {
              
          }
      }
      
      public void alarmTime(final int hour, final int minute)
      {
          Thread t = new Thread ()
                  {
                      public void run()
                  {
                      int time = 0;
                      while (time==0)
                  {
                      Calendar c = Calendar.getInstance();
                      int h= c.get(Calendar.HOUR);
                      int m = c.get(Calendar.MINUTE);
                      if (hour == h && minute == m)
                  {
                      startClock();
                      JOptionPane.showMessageDialog(null, "ALARM");
                      int stop = JOptionPane.showConfirmDialog(null, "STOP", "",JOptionPane.YES_NO_OPTION);
                      if (stop == JOptionPane.YES_OPTION);
                      stopAlarm();
                      break;
                  }
                  }
                  }
                  }; t.start();
      }
      
      public void stopAlarm()
      {
          if(player !=null)
          {
              player.close();
          }
      }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jc2 = new javax.swing.JComboBox<>();
        jc1 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        Listen = new javax.swing.JButton();
        Ringtone = new javax.swing.JButton();
        Set = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        calcButt = new javax.swing.JButton();
        textButt = new javax.swing.JButton();
        musicButt = new javax.swing.JButton();
        alarmButt = new javax.swing.JButton();
        paintButt = new javax.swing.JButton();
        stopButt = new javax.swing.JButton();
        home = new javax.swing.JButton();
        jLabelDate = new javax.swing.JLabel();
        jLabelTime = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1080, 720));
        getContentPane().setLayout(null);

        jPanel1.setMaximumSize(new java.awt.Dimension(1080, 720));
        jPanel1.setMinimumSize(new java.awt.Dimension(629, 500));
        jPanel1.setName(""); // NOI18N
        jPanel1.setOpaque(false);
        jPanel1.setPreferredSize(new java.awt.Dimension(629, 500));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 204, 102));
        jLabel1.setText("Alarm Clock");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 40, 243, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("TIMER");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 220, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Hour");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 220, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel3.setText("      jLabel3");
        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 120, 240, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("Minute");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 220, -1, -1));

        jc2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jc2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));
        jPanel1.add(jc2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 250, -1, -1));

        jc1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jc1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24" }));
        jPanel1.add(jc1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 250, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText(":");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(204, 227, -1, -1));
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 465, 465, 44));

        Listen.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Listen.setForeground(new java.awt.Color(255, 51, 51));
        Listen.setText("Listen");
        Listen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListenActionPerformed(evt);
            }
        });
        jPanel1.add(Listen, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 380, -1, -1));

        Ringtone.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Ringtone.setForeground(new java.awt.Color(102, 102, 255));
        Ringtone.setText("Ringtone");
        Ringtone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RingtoneActionPerformed(evt);
            }
        });
        jPanel1.add(Ringtone, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 290, 130, -1));

        Set.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Set.setForeground(new java.awt.Color(0, 153, 0));
        Set.setText("Set Alarm");
        Set.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SetActionPerformed(evt);
            }
        });
        jPanel1.add(Set, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 330, -1, -1));

        getContentPane().add(jPanel1);
        jPanel1.setBounds(350, 200, 629, 470);

        jPanel2.setAlignmentX(0.0F);
        jPanel2.setMaximumSize(new java.awt.Dimension(1080, 720));
        jPanel2.setMinimumSize(new java.awt.Dimension(1080, 720));
        jPanel2.setLayout(null);

        calcButt.setOpaque(false);
        calcButt.setContentAreaFilled(false);
        calcButt.setBorderPainted(false);
        calcButt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Buttons/Calculator_LM.png"))); // NOI18N
        calcButt.setMaximumSize(new java.awt.Dimension(140, 80));
        calcButt.setPreferredSize(new java.awt.Dimension(140, 80));
        calcButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcButtActionPerformed(evt);
            }
        });
        jPanel2.add(calcButt);
        calcButt.setBounds(10, 30, 140, 80);

        textButt.setOpaque(false);
        textButt.setContentAreaFilled(false);
        textButt.setBorderPainted(false);
        textButt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Buttons/Text Editor_LM.png"))); // NOI18N
        textButt.setText("jButton2");
        textButt.setMaximumSize(new java.awt.Dimension(140, 80));
        textButt.setPreferredSize(new java.awt.Dimension(140, 80));
        textButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textButtActionPerformed(evt);
            }
        });
        jPanel2.add(textButt);
        textButt.setBounds(20, 140, 140, 80);

        musicButt.setOpaque(false);
        musicButt.setContentAreaFilled(false);
        musicButt.setBorderPainted(false);
        musicButt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Buttons/Music Player_LM.png"))); // NOI18N
        musicButt.setMaximumSize(new java.awt.Dimension(140, 80));
        musicButt.setPreferredSize(new java.awt.Dimension(140, 80));
        musicButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                musicButtActionPerformed(evt);
            }
        });
        jPanel2.add(musicButt);
        musicButt.setBounds(20, 260, 140, 80);

        alarmButt.setOpaque(false);
        alarmButt.setContentAreaFilled(false);
        alarmButt.setBorderPainted(false);
        alarmButt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Buttons/Alarm_LM.png"))); // NOI18N
        alarmButt.setMaximumSize(new java.awt.Dimension(140, 80));
        alarmButt.setPreferredSize(new java.awt.Dimension(140, 80));
        alarmButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alarmButtActionPerformed(evt);
            }
        });
        jPanel2.add(alarmButt);
        alarmButt.setBounds(20, 370, 140, 80);

        paintButt.setOpaque(false);
        paintButt.setContentAreaFilled(false);
        paintButt.setBorderPainted(false);
        paintButt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Buttons/Paint_LM.png"))); // NOI18N
        paintButt.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        paintButt.setMaximumSize(new java.awt.Dimension(140, 80));
        paintButt.setMinimumSize(new java.awt.Dimension(140, 80));
        paintButt.setPreferredSize(new java.awt.Dimension(140, 80));
        paintButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paintButtActionPerformed(evt);
            }
        });
        jPanel2.add(paintButt);
        paintButt.setBounds(20, 490, 140, 80);

        stopButt.setOpaque(false);
        stopButt.setContentAreaFilled(false);
        stopButt.setBorderPainted(false);
        stopButt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Buttons/Stopwatch_LM.png"))); // NOI18N
        stopButt.setMaximumSize(new java.awt.Dimension(140, 80));
        stopButt.setMinimumSize(new java.awt.Dimension(140, 80));
        stopButt.setPreferredSize(new java.awt.Dimension(140, 80));
        stopButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtActionPerformed(evt);
            }
        });
        jPanel2.add(stopButt);
        stopButt.setBounds(20, 610, 140, 80);

        home.setOpaque(false);
        home.setContentAreaFilled(false);
        home.setBorderPainted(false);
        home.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Buttons/HomeButton_LM.png"))); // NOI18N
        home.setText("home");
        home.setMaximumSize(new java.awt.Dimension(140, 80));
        home.setPreferredSize(new java.awt.Dimension(140, 80));
        home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeActionPerformed(evt);
            }
        });
        jPanel2.add(home);
        home.setBounds(530, 20, 110, 100);
        jPanel2.add(jLabelDate);
        jLabelDate.setBounds(690, 80, 300, 40);
        jPanel2.add(jLabelTime);
        jLabelTime.setBounds(690, 30, 250, 40);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frames/Alarm_LM.png"))); // NOI18N
        jLabel8.setAlignmentY(0.0F);
        jPanel2.add(jLabel8);
        jLabel8.setBounds(0, 0, 1080, 720);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 0, 1080, 720);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void RingtoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RingtoneActionPerformed
        // TODO add your handling code here:
        chooseSong();
        if(!sound.equals(null))
        {
            Ringtone.setText("Alarm Music : "+title);
        }
        Listen.setEnabled(true);
    }//GEN-LAST:event_RingtoneActionPerformed

    private void ListenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListenActionPerformed
        // TODO add your handling code here:
        if(Listen.getText().equals("Listen"))
        {
            startClock();
            Listen.setText("Stop Sound");
            Set.setEnabled(false);
        }
        else if (Listen.getText().equals("Stop Sound"))
        {
            stopAlarm();
            Listen.setText("Listen");
            Set.setEnabled(true);
        }
    }//GEN-LAST:event_ListenActionPerformed

    private void SetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SetActionPerformed
        // TODO add your handling code here:
        hourAlarm = jc1.getSelectedItem().toString();
        minuteAlarm = jc2.getSelectedItem().toString();
        if(jLabel7.getText() !="")
        {
            String alarmClock = hourAlarm +":"+minuteAlarm;
            System.out.println(alarmClock);
            alarmTime(Integer.valueOf(hourAlarm), Integer.valueOf(minuteAlarm));
            
        }
        else {
            JOptionPane.showMessageDialog(null, "No music detected", "Warning!", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_SetActionPerformed

    private void musicButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_musicButtActionPerformed
        // TODO add your handling code here:
        MusicFrame msc = new MusicFrame();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                msc.setVisible(true);
                Alarm.this.setVisible(false);
                Alarm.this.dispose();
            }
        });
    }//GEN-LAST:event_musicButtActionPerformed

    private void stopButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtActionPerformed
        // TODO add your handling code here:
        StopFrame stp = new StopFrame();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                stp.setVisible(true);
                Alarm.this.setVisible(false);
                Alarm.this.dispose();
            }
        });
    }//GEN-LAST:event_stopButtActionPerformed

    private void homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeActionPerformed
        // TODO add your handling code here:
        Main main = new Main();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                main.setVisible(true);
                Alarm.this.setVisible(false);
                Alarm.this.dispose();
            }
        });
    }//GEN-LAST:event_homeActionPerformed

    private void calcButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcButtActionPerformed
        // TODO add your handling code here:
        CalculatorFrame cal = new CalculatorFrame();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                cal.setVisible(true);
                Alarm.this.setVisible(false);
                Alarm.this.dispose();
            }
        });
    }//GEN-LAST:event_calcButtActionPerformed

    private void textButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textButtActionPerformed
        // TODO add your handling code here:
        textEditorFrame txtEd = new textEditorFrame();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                txtEd.setVisible(true);
                Alarm.this.setVisible(false);
                Alarm.this.dispose();
            }
        });
    }//GEN-LAST:event_textButtActionPerformed

    private void alarmButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alarmButtActionPerformed
        // TODO add your handling code here:
        Alarm alrm = new Alarm();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                alrm.setVisible(true);
                Alarm.this.setVisible(false);
                Alarm.this.dispose();
            }
        });
    }//GEN-LAST:event_alarmButtActionPerformed

    private void paintButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paintButtActionPerformed
        // TODO add your handling code here:
        PaintFrame pnt = new PaintFrame();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                pnt.setVisible(true);
                Alarm.this.setVisible(false);
                Alarm.this.dispose();
            }
        });
    }//GEN-LAST:event_paintButtActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Alarm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Alarm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Alarm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Alarm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Alarm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Listen;
    private javax.swing.JButton Ringtone;
    private javax.swing.JButton Set;
    private javax.swing.JButton alarmButt;
    private javax.swing.JButton calcButt;
    private javax.swing.JButton home;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelDate;
    private javax.swing.JLabel jLabelTime;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JComboBox<String> jc1;
    private javax.swing.JComboBox<String> jc2;
    private javax.swing.JButton musicButt;
    private javax.swing.JButton paintButt;
    private javax.swing.JButton stopButt;
    private javax.swing.JButton textButt;
    // End of variables declaration//GEN-END:variables
 
     public void run()
     {
         while (true)
         {
             Calendar c = Calendar.getInstance();
             SimpleDateFormat simpleDateFormat = new SimpleDateFormat ("hh:mm:ss");
             Date date = c.getTime();
             hours = simpleDateFormat.format(date);
             jLabel3.setText(hours);
         }
     }
     
    private void clock() {
        try{
            Timer timer = new Timer(1000, new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    Calendar cal1 = new GregorianCalendar();
                    Calendar cal2 = cal1.getInstance();
                    
                    String date = new SimpleDateFormat("MMMM '-' dd '-' YYYY EEEE").format(Calendar.getInstance().getTime()).toUpperCase();
                    String time = new SimpleDateFormat("hh ':' mm ':' ss").format(Calendar.getInstance().getTime());
                    
                    String am_pm;
                    if (cal1.get(Calendar.AM_PM) == 0){
                        am_pm = "AM";
                    } else{
                        am_pm = "PM";
                    }
                    jLabelDate.setText(date);
                    jLabelTime.setText(time+" "+ am_pm);
                }

               
            });
            timer.start();
        } catch(Exception e){
            e.printStackTrace();
        }
    }
}
